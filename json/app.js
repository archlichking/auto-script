// Generated by CoffeeScript 1.3.3
(function() {
  var app, express, fs, https, routes, run_config, stylus;

  express = require('express');

  routes = require('./routes');

  stylus = require('stylus');

  fs = require('fs');

  https = require('https');

  run_config = JSON.parse(fs.readFileSync(__dirname + "/config.json"));

  app = express();

  app.configure(function() {
    app.set('views', __dirname + '/views');
    app.set('view engine', 'jade');
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(express["static"](__dirname + '/public'));
    app.use(stylus.middleware({
      src: __dirname + '/public'
    }));
    return app.use(app.router);
  });

  app.configure('development', function() {
    return app.use(express.errorHandler({
      dumpExceptions: true,
      showStack: true
    }));
  });

  app.configure('production', function() {
    return app.use(express.errorHandler());
  });

  app.get('/ios/config', function(req, res) {
    return res.send(run_config);
  });

  app.get('/android/config', function(req, res) {
    return res.send(run_config);
  });

  app.get('/ios/result', function(req, res) {
    var res_body, result, tcm;
    console.log(req.param('comment'));
    res_body = '';
    tcm = https.get('https://tcm.openfeint.com:443//index.php?/miniapi/get_tests/' + run_config.auto_config.run_id + '&key=adfqet87983hiu783flkad09806g98adgk', function(response) {
      console.log(response.statusCode);
      return response.on('data', function(d) {
        process.stdout.write(d);
        return res_body += d;
      });
    });
    tcm.on('error', function(e) {
      return console.error(e);
    });
    result = JSON.parse(res_body);
    console.log(result);
    return res.send('pass');
  });

  app.listen(3000);

  console.log("Express server listening on port %d in %s mode", app.settings.env);

}).call(this);

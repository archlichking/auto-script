<report name="test_report" categ="CATEGORY_NAME"><test name="load the full achievement list" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="unlock a locked achievement should be successful" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] unlock a non-existed achievement" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="unlock an unlocked achievement should be successful" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="lock an achievement should be successful" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] lock a non-existed achievement" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="lock a locked achievement should be successful" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="load the full leaderboard list" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="delete an existed score in leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="delete score in non-existed leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="delete a non-existed score in leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="create a text for moderation" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="check a CHECKED status text" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="update a CHECKED text" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="get current user info from server" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="get current user info from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="get full friend list of current user" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="post score to a worse-score-allow leaderboard" executed="yes"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="post high score to a no-worse-score-allow leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="post score to a non-exsited leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="post score to a non-worse-score-allow leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="post score -1 to a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="all time ranking of a non-existed score in leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="weekly ranking of a non-existed score in leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="daily ranking of a non-existed score in leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="my all time ranking of an existed score in leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="my weekly ranking of an existed score in leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="my daily ranking of an existed score in leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="all time score list of everyone section in a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="weekly score list of everyone in a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="daily score list of everyone in a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="all time score list of friend section for a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="weekly score list of friend for a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="daily score list of friend for a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="all time top score list for a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="weekly top score list for a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="daily top score list for a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="all time top friend score list for a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="weekly top friend score list for a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="daily top friend score list for a leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="get the first page of ignore list" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="check whether the current user ignores a specific user that is in the ignore liset" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="get full ignore list of current user" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] cancel loading thumbnail image" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="get the first page of friend list of current user" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] load the first page of achievement list" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] load the first page of leaderboard list" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] cancel loading leaderboard icon" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="Load moderation text from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="load moderation text from server" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="check a DELETED status text" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="retrieve new friend code with no expire time" executed="yes"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="retrieve new friend code with expire time" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="delete existed friend code" executed="yes"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="verify friend code" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="check a listed user" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="check a none listed user" executed="yes"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="load friend code from server" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="get owner of the friend code I verified" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="get friends who verifies my code" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="a live host should be reachable" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="an inaccessible host should be unreachable" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="GreePlatform basic info should be correct" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="an invalid host should be unreachable" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="post score to a time unit leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="post time unit score to a non-worse-score-allow leaderboard" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] user balance should be correct" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] product list should be correct" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="check whether the current user ignores a specific user that is not in the ignore list" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] pageSize/canLoadNext/loadNext - friend list" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] startIndex/pageSize/canLoadPrevious/loadPrevious - leaderboard" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[Android only] enable debug logging" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="set logging level to error" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] set path of log file" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="set logging level to warning" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="set logging level to info" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="set logging level to debug" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="set logging level to verbose" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] enable notification" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] enable local notification" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] enable notification at screen bottom" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] get app info from GreePlatform" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] cancel loading achievement icon" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="load locked achievement icon" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="load unlocked achievement icon" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="see a high score posted by a friend" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="load current user thumbnail with standard size" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="load current user thumbnail with small size" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="load current user thumbnail with large size" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="load current user thumbnail with huge size" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="load the leaderboard icon" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="load single achievement description" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] load single leaderboard description" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] format score of a none time leaderboard" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] format score of a time unit leaderboard" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="See a daily high score posted by a friend" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="See a weekly high score posted by a friend" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="See a total high score posted by a friend" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] load leaderboard score thumbnail with standard size" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] load leaderboard score thumbnail with small size" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] load leaderboard score thumbnail with huge size" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] refresh a text status from server" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] get payment item info after initialized" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] verify success payment order" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="verify failed payment order" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] get app info from GreePlatform" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[Android only] debugFile" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] verify success payment order" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] purchase a product" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[Android only] add setting by customized json file" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] initialize with unencrypted consumerKey and secret" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] initialize with encrypted consumerKey and secret" executed="yes"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[Android only] log to file is working correct" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] CloseMessage" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[IOS only] signRequest with url params should be correct" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] hex string from binary" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] normalized string length" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] remove html tag from string" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] replace localized html string" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] decode html entries from string" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] execute block in object" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] resize image with rotation mark 0" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] resize image with rotation mark 1" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] resize image with rotation mark 2" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] resize image with rotation mark 3" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] stringify image with base64" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[iOS only] get icon close to given width" executed="no"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="[Android only] get standard user thumbnail from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] get small user thumbnail from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] get large user thumbnail from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] get huge user thumbnail from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] get standard leaderboard score thumbnail from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] get small leaderboard thumbnail from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] get huge leaderboard thumbnail from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] Another method to get small leaderboard thumbnail from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] Another method to get huge leaderboard thumbnail from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] Another method to get standard leaderboard thumbnail from native cache" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="[Android only] get leaderboard thumbnail from native cache" executed="yes"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="post one request incentive" executed="yes"><result><success passed="no" state="100" hasTimedOut="false" /></result></test><test name="post two request incentive" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="post one invite incentive" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test><test name="post two invite incentive" executed="yes"><result><success passed="yes" state="100" hasTimedOut="false" /></result></test></report>